{"version":3,"sources":["components/headers/MainHeader.tsx","components/footer/MainFooter.tsx","components/Section.tsx","components/home/ProjectCard.tsx","pages/Index.tsx","components/Loader.tsx","pages/object-detection/Index.tsx","App.tsx","index.tsx"],"names":["MainHeader","id","className","to","src","process","alt","width","MainFooter","href","target","rel","icon","faGithub","Section","props","class","children","ProjectCard","path","image","name","description","projects","Home","map","p","Loader","loading","ObjectDetectionPage","useState","setLoading","model","setModel","videoRef","useRef","canvasRef","loadModel","a","cocossd","coco","runModel","current","state","hasUserMedia","video","detect","predictions","canvas","ctx","getContext","drawCanvas","clearRect","height","forEach","obj","text","x","y","beginPath","strokeStyle","fillStyle","rect","fillText","stroke","useEffect","intervalID","setInterval","clearInterval","ref","muted","App","basename","exact","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.552d1a1d.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\n\nconst MainHeader = () => {\n    return (\n        <div id=\"MainHeader\" className=\"bg-black text-white\">\n            <div className=\"container mx-auto p-2\">\n                <div id=\"logo-container\">\n                    <Link className=\"flex items-center\" to='/'>\n                        <img src={`${process.env.PUBLIC_URL}/images/logo192.png`} alt=\"React logo\" width=\"25\"/>\n                        <p className=\"text-xl mx-2\"><span className=\"text-react-color\">React</span> x <span className=\"text-tensorflow-color\">TensorFlow</span></p>\n                        <img src={`${process.env.PUBLIC_URL}/images/tf-logo.png`} alt=\"TensorFlow logo\" width=\"25\"/>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default MainHeader;","import { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst MainFooter = () => {\n    return (\n        <footer id=\"MainFooter\" className=\"w-full bg-black text-white\">\n            <div className=\"container mx-auto p-2 flex justify-center\">\n                <a href=\"https://github.com/ahtle/tensorflow-practice\" target=\"_blank\" rel=\"noreferrer\"><FontAwesomeIcon icon={faGithub} className=\"h-8 w-8\"/></a>\n            </div>\n        </footer>\n    )\n};\n\nexport default MainFooter;","import { ReactNode } from 'react';\n\ntype Props = {\n    children: ReactNode,\n    class?: string\n}\n\nconst Section = (props: Props) => {\n    return (\n        <div className={`py-10 ${props.class}`}>\n            <div className=\"container mx-auto\">\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default Section;","import { Link } from 'react-router-dom';\nimport './project-card.scss';\n\ntype Props = {\n    name: string,\n    description: string,\n    image: string\n    path: string\n}\n\nconst ProjectCard = (props: Props) => {\n    return (\n        <Link className=\"project-card mx-8 my-4 rounded overflow-hidden cursor-pointer transition group shadow hover:shadow-lg\"\n            to={props.path}\n        >\n            <div className=\"img-wrapper flex items-center border-b border-gray-200 bg-blue-50\">\n                <img src={`${process.env.PUBLIC_URL}/images/${props.image}`} alt={props.name}/>\n            </div>\n            <div className='card-body p-4 group-hover:bg-yellow-600 transition'>\n                <p className=\"text-bold text-blue-900 text-lg mb-2 group-hover:text-white\">{props.name}</p>\n                <p className=\"text-gray-400 group-hover:text-white transition\">{props.description}</p>\n            </div>\n        </Link>\n    )\n}\n\nexport default ProjectCard;","import Section from '../components/Section';\nimport ProjectCard from '../components/home/ProjectCard';\n\n\nconst projects = [\n    {name: 'Object detection', description: 'Are you really a \"person\"? Turn on your webcam and find out!', path: '/object-detection', image: 'tf-object-detection-logo.png'},\n]\n\nconst Home = () => {\n    return (\n        <div id=\"Home\">\n            \n            {/* intro section */}\n            <Section\n                class=\"bg-gray-600 text-white\"\n            >\n                <>\n                    <h1 className=\"text-center mb-10\">Practice site for...</h1>\n                    <div className=\"grid md:grid-cols-2 gap-4\">\n                        <div id=\"react-wrapper\" className=\"flex flex-col items-center mb-5 md:mb-0\">\n                            <h1 className=\"text-react-color text-bold mb-5\">React</h1>\n                            <p className=\"text-center\">A JavaScript library for building user interfaces</p>\n                        </div>\n                        <div className=\"flex flex-col items-center mb-5 md:mb-0\">\n                            <h1 className=\"text-tensorflow-color text-bold mb-5\">Tensorflow</h1>\n                            <p className=\"text-center\">An end-to-end open source platform for machine learning</p>\n                        </div>\n                    </div>\n                </>\n            </Section>\n            \n            {/* topics section */}\n            <Section>\n                <>\n                    <h1 className=\"text-center mb-14\">Mini projects:</h1>\n                    <div className=\"flex justify-center\">\n                        \n                        <a className=\"project-card mx-8 my-4 rounded overflow-hidden cursor-pointer transition group shadow hover:shadow-lg\"\n                            href=\"https://ahtle.github.io/tensorflow-image-classification/image-classification\"\n                        >\n                            <div className=\"img-wrapper flex items-center border-b border-gray-200 bg-blue-50\">\n                                <img src={`${process.env.PUBLIC_URL}/images/tf-image-classification-logo.png`} alt=\"Image classification\"/>\n                            </div>\n                            <div className='card-body p-4 group-hover:bg-yellow-600 transition'>\n                                <p className=\"text-bold text-blue-900 text-lg mb-2 group-hover:text-white\">Image classification</p>\n                                <p className=\"text-gray-400 group-hover:text-white transition\">Upload images and I'll tell you what it is!</p>\n                            </div>\n                        </a>\n\n                        {projects.map(p => {\n                            return (\n                                <ProjectCard \n                                    key={p.name}\n                                    name={p.name}\n                                    description={p.description}\n                                    image={p.image}\n                                    path={p.path}\n                                />\n                            )\n                        })}\n\n\n                    </div>\n                </>\n            </Section>\n\n        </div>\n    )\n}\n\nexport default Home;","type Props = {\n    loading: boolean\n}\n\nconst Loader = (props: Props) => {\n    if (props.loading) {\n        return (\n            <div className=\"absolute w-full h-full top-0 flex justify-center items-center bg-gray-300 bg-opacity-50\">\n                <h1 className=\"\">Loading...</h1>\n            </div>\n        )\n    }\n    return <></>\n}\n\nexport default Loader;","import React, { useState, useEffect, useRef } from 'react';\nimport \"@tensorflow/tfjs\";\nimport * as cocossd from '@tensorflow-models/coco-ssd';\nimport Loader from '../../components/Loader';\nimport Section from '../../components/Section';\nimport Webcam from 'react-webcam';\n\n\nconst ObjectDetectionPage = () => {\n    // *********** START local state ***********\n    const [loading, setLoading] = useState(false);\n    const [model, setModel] = useState<cocossd.ObjectDetection>();\n    const videoRef = useRef<any>(null);\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    // *********** END local state ***********\n\n\n    // *********** START functions ***********\n    const loadModel = async () => {\n        setLoading(true);\n        const coco = await cocossd.load();\n        setModel(coco);\n        setLoading(false);\n    }\n    \n    const runModel = async () => {\n        if (model && canvasRef.current && videoRef.current.state.hasUserMedia) {\n            const video = videoRef.current.video;\n            const predictions = await model.detect(video);\n            \n            // Draw canvas\n            if (predictions) {\n                const canvas = canvasRef.current;\n                const ctx = canvas.getContext('2d');\n                drawCanvas(predictions, ctx); \n            }\n        }\n    }\n\n    const drawCanvas = (predictions: cocossd.DetectedObject[], ctx: CanvasRenderingContext2D | null) => {\n        if (ctx) {\n            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n            predictions.forEach(obj => {\n                const text = obj['class']; \n                const [x, y, width, height] = obj['bbox']; \n    \n                ctx.beginPath();\n                ctx.strokeStyle = \"#2fff00\";\n                ctx.fillStyle = \"#2fff00\";\n                ctx.rect(x, y, width / 3, height);\n                ctx.fillText(text, x, y);\n                ctx.stroke();\n            })\n        }\n    }\n    // *********** END functions **************\n    \n\n    \n    // *********** START useEffect **************\n    useEffect(() =>  {\n        loadModel();\n    }, []);\n\n    useEffect(() =>  {\n        const intervalID = setInterval(() => {\n            runModel();\n        }, 1000);\n      \n        return () => {\n            clearInterval(intervalID);\n        };\n\n    }, [model]);\n    // *********** END useEffect **************\n\n\n    // *********** START renders **************\n    return (\n        <div id=\"ObjectDetectionPage\">\n            <Section>\n                <h1 className=\"text-center mb-10\">Object Detection</h1>\n                <h2 className=\"text-center text-bold text-tensorflow-color mb-10\" >Localize and identify objects in a image/video</h2>\n\n                <div className=\"flex flex-col items-center\">\n                    <h3 className=\"mb-6\">This demo needs a webcam</h3>\n\n                    <div className=\"relative mt-12\">\n                        <Webcam \n                            ref={videoRef}\n                            muted={true}\n                        />\n\n                        <canvas \n                            ref={canvasRef}\n                            className=\"absolute top-0 w-full h-full\"\n                        />\n                    </div>\n                </div>\n\n        \n            </Section>\n        \n            <Loader loading={loading}/>\n        </div>\n    )\n}\n\nexport default ObjectDetectionPage;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport MainHeader from './components/headers/MainHeader';\nimport MainFooter from './components/footer/MainFooter';\nimport Home from '../src/pages/Index';\nimport ObjectDetectionPage from './pages/object-detection/Index';\nimport './styles/index.css';\n\nfunction App() {\n  return (\n    <>\n      <Router basename=\"/\">  \n        <MainHeader />\n\n        <div className=\"min-h-screen\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/object-detection\" exact component={ObjectDetectionPage} />\n            <Route render={() => <h1>404: page not found</h1>} />\n          </Switch>\n        </div>\n      </Router>\n\n      <MainFooter />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}